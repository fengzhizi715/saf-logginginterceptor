apply plugin: 'com.android.library'
apply plugin: 'com.novoda.bintray-release'
apply plugin: 'kotlin-android'

def cfg = rootProject.ext.configuration // 配置
def libs = rootProject.ext.libraries // 库

android {
    compileSdkVersion cfg.compileVersion

    defaultConfig {
        minSdkVersion cfg.minSdk
        targetSdkVersion cfg.targetSdk
        versionCode 1
        versionName "1.0"

        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"

    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }
    sourceSets {
        main.java.srcDirs += 'src/main/kotlin'
    }
    lintOptions {
        abortOnError false
        checkReleaseBuilds false
    }
}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    androidTestCompile('com.android.support.test.espresso:espresso-core:2.2.2', {
        exclude group: 'com.android.support', module: 'support-annotations'
    })

    compileOnly "androidx.appcompat:appcompat:${libs.appcompat}"
    testImplementation 'junit:junit:4.12'
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlin_version"
    compileOnly "com.squareup.okhttp3:okhttp:${libs.okhttp3}"
    api 'cn.netdiscovery.http.interceptor:okhttp-logging-interceptor:1.0.2'
}

repositories {
    mavenCentral()
    jcenter()
}

allprojects {
    repositories {
        jcenter()
    }
    //加上这些
    tasks.withType(Javadoc) {
        options{ encoding "UTF-8"
            charSet 'UTF-8'
            links "http://docs.oracle.com/javase/7/docs/api"
        }
    }
}

publish{
    userOrg = 'fengzhizi715'
    groupId = 'com.safframework.log'
    artifactId = 'saf-logginginterceptor'
    publishVersion = '1.5.2'
    desc = 'this is a log interceptor for okhttp,written by kotlin'
    website = 'https://github.com/fengzhizi715/saf-logginginterceptor'
}